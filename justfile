# Zubrilka Light - –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–µ–ø–ª–æ—è

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
default:
    @just --list

# –°–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ –¥–ª—è –¥–µ–ø–ª–æ—è
deploy-archive:
    #!/usr/bin/env bash
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –¥–µ–ø–ª–æ—è..."
    ARCHIVE_NAME="zubrilka-light-deploy-$(date +%Y%m%d-%H%M%S).zip"
    
    zip -r "$ARCHIVE_NAME" . \
      -x "*.git*" \
      -x "*.DS_Store" \
      -x "*.vscode/*" \
      -x "*.idea/*" \
      -x "*node_modules/*" \
      -x "*vendor/*" \
      -x "*.log" \
      -x "*cache/*" \
      -x "*tmp/*" \
      -x "justfile" \
      -x "README.md" \
      -x "docker-compose.yml" \
      -x "*.zip"
    
    echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_NAME"
    ls -lh "$ARCHIVE_NAME"

# –°–æ–∑–¥–∞—Ç—å tar.gz –∞—Ä—Ö–∏–≤ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
deploy-tar:
    #!/usr/bin/env bash
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ tar.gz –∞—Ä—Ö–∏–≤–∞..."
    ARCHIVE_NAME="zubrilka-light-deploy-$(date +%Y%m%d-%H%M%S).tar.gz"
    
    tar -czf "$ARCHIVE_NAME" \
      --exclude='.git' \
      --exclude='.DS_Store' \
      --exclude='.vscode' \
      --exclude='.idea' \
      --exclude='node_modules' \
      --exclude='vendor' \
      --exclude='*.log' \
      --exclude='cache' \
      --exclude='tmp' \
      --exclude='justfile' \
      --exclude='README.md' \
      --exclude='*.tar.gz' \
      .
    
    echo "‚úÖ –ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $ARCHIVE_NAME"
    ls -lh "$ARCHIVE_NAME"

# –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-export DB_NAME="zubrilka":
    #!/usr/bin/env bash
    echo "üíæ –≠–∫—Å–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    BACKUP_FILE="db-backup-$(date +%Y%m%d-%H%M%S).sql"
    mysqldump -u root {{DB_NAME}} > "$BACKUP_FILE"
    echo "‚úÖ –ë–∞–∑–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞: $BACKUP_FILE"
    ls -lh "$BACKUP_FILE"

# –ò–º–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-import FILE DB_NAME="zubrilka":
    #!/usr/bin/env bash
    echo "üì• –ò–º–ø–æ—Ä—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    mysql -u root {{DB_NAME}} < {{FILE}}
    echo "‚úÖ –ë–∞–∑–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ git
git-status:
    @git status -s

# –ö–æ–º–º–∏—Ç –∏ –ø—É—à
git-push MESSAGE:
    git add .
    git commit -m "{{MESSAGE}}"
    git push origin main

# –°–ª–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É –≤ main
merge-to-main:
    #!/usr/bin/env bash
    CURRENT_BRANCH=$(git branch --show-current)
    
    if [ "$CURRENT_BRANCH" = "main" ]; then
        echo "‚ùå –¢—ã —É–∂–µ –Ω–∞ main!"
        exit 1
    fi
    
    echo "üîÄ –°–ª–∏–≤–∞–µ–º $CURRENT_BRANCH –≤ main..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if [[ -n $(git status -s) ]]; then
        echo "‚ùå –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!"
        exit 1
    fi
    
    # –ü—É—à–∏–º —Ç–µ–∫—É—â—É—é –≤–µ—Ç–∫—É
    echo "‚¨ÜÔ∏è  Push —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏..."
    git push origin "$CURRENT_BRANCH"
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ main
    echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ main..."
    git checkout main
    
    # –û–±–Ω–æ–≤–ª—è–µ–º main
    echo "‚¨áÔ∏è  Pull main..."
    git pull origin main
    
    # –°–ª–∏–≤–∞–µ–º –≤–µ—Ç–∫—É
    echo "üîÄ –°–ª–∏–≤–∞–µ–º $CURRENT_BRANCH..."
    git merge "$CURRENT_BRANCH" --no-ff -m "Merge branch '$CURRENT_BRANCH'"
    
    # –ü—É—à–∏–º main
    echo "‚¨ÜÔ∏è  Push main..."
    git push origin main
    
    echo "‚úÖ –í–µ—Ç–∫–∞ $CURRENT_BRANCH —Å–ª–∏—Ç–∞ –≤ main!"
    echo "üí° –ú–æ–∂–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤–µ—Ç–∫—É: just delete-branch $CURRENT_BRANCH"

# –ë—ã—Å—Ç—Ä—ã–π –ø—É—à –≤ main (–µ—Å–ª–∏ —É–∂–µ –Ω–∞ main)
push:
    #!/usr/bin/env bash
    CURRENT_BRANCH=$(git branch --show-current)
    
    if [ "$CURRENT_BRANCH" != "main" ]; then
        echo "‚ùå –¢—ã –Ω–µ –Ω–∞ main! –ò—Å–ø–æ–ª—å–∑—É–π: just merge-to-main"
        exit 1
    fi
    
    echo "‚¨ÜÔ∏è  Push –≤ main..."
    git push origin main
    echo "‚úÖ –ó–∞–ø—É—à–µ–Ω–æ –≤ main!"

# –£–¥–∞–ª–∏—Ç—å –≤–µ—Ç–∫—É (–ª–æ–∫–∞–ª—å–Ω–æ –∏ —É–¥–∞–ª–µ–Ω–Ω–æ)
delete-branch BRANCH:
    #!/usr/bin/env bash
    echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º –≤–µ—Ç–∫—É {{BRANCH}}..."
    
    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ
    git branch -d {{BRANCH}} 2>/dev/null || git branch -D {{BRANCH}}
    
    # –£–¥–∞–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ
    git push origin --delete {{BRANCH}} 2>/dev/null || echo "–í–µ—Ç–∫–∞ —É–∂–µ —É–¥–∞–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    
    echo "‚úÖ –í–µ—Ç–∫–∞ {{BRANCH}} —É–¥–∞–ª–µ–Ω–∞!"

# –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
new-branch NAME:
    #!/usr/bin/env bash
    echo "üåø –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É {{NAME}}..."
    git checkout -b {{NAME}}
    echo "‚úÖ –í–µ—Ç–∫–∞ {{NAME}} —Å–æ–∑–¥–∞–Ω–∞ –∏ –∞–∫—Ç–∏–≤–Ω–∞!"

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–µ—Ç–∫–∏
branches:
    @echo "üåø –õ–æ–∫–∞–ª—å–Ω—ã–µ –≤–µ—Ç–∫–∏:"
    @git branch -v
    @echo ""
    @echo "üåç –£–¥–∞–ª–µ–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏:"
    @git branch -r

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
    #!/usr/bin/env bash
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -f *.zip *.tar.gz *.log
    find . -name ".DS_Store" -delete
    echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
check-permissions:
    #!/usr/bin/env bash
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    echo "–§–∞–π–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏ 777 (–Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ):"
    find . -type f -perm 777 2>/dev/null || echo "  –ù–µ –Ω–∞–π–¥–µ–Ω–æ"
    echo ""
    echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–∞–≤–∞–º–∏ 777:"
    find . -type d -perm 777 2>/dev/null || echo "  –ù–µ –Ω–∞–π–¥–µ–Ω–æ"

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ (–¥–ª—è –¥–µ–ø–ª–æ—è)
fix-permissions:
    #!/usr/bin/env bash
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."
    find . -type f -exec chmod 644 {} \;
    find . -type d -exec chmod 755 {} \;
    chmod 644 includes/config.php
    echo "‚úÖ –ü—Ä–∞–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π: –∞—Ä—Ö–∏–≤ + —ç–∫—Å–ø–æ—Ä—Ç –ë–î
deploy-full DB_NAME="zubrilka":
    @echo "üöÄ –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π..."
    @just db-export {{DB_NAME}}
    @just deploy-archive
    @echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥:"
    @ls -lht *.zip *.sql | head -2

# –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä PHP (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
serve PORT="8000":
    @echo "üåê –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {{PORT}}..."
    @echo "–û—Ç–∫—Ä–æ–π: http://localhost:{{PORT}}"
    php -S localhost:{{PORT}}

# –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
size:
    @echo "üìä –†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞:"
    @du -sh .
    @echo ""
    @echo "–¢–æ–ø-5 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:"
    @du -sh */ | sort -hr | head -5

# –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ SSH (git pull –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
deploy-ssh HOST USER PATH="/var/www/zubrilka-light":
    #!/usr/bin/env bash
    echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ SSH..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if [[ -n $(git status -s) ]]; then
        echo "‚ùå –ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!"
        exit 1
    fi
    
    # Push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    echo "üì§ Push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    git push origin main
    
    # Pull –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    echo "üì• Pull –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh {{USER}}@{{HOST}} "cd {{PATH}} && git pull origin main"
    
    echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
    echo "üåê –ü—Ä–æ–≤–µ—Ä—å: https://{{HOST}}"

# –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ rsync (–±–µ–∑ git –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
deploy-rsync HOST USER PATH="/var/www/zubrilka-light":
    #!/usr/bin/env bash
    echo "üöÄ –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ rsync..."
    
    rsync -avz --delete \
      --exclude='.git' \
      --exclude='.DS_Store' \
      --exclude='.vscode' \
      --exclude='*.zip' \
      --exclude='*.sql' \
      --exclude='justfile' \
      ./ {{USER}}@{{HOST}}:{{PATH}}/
    
    echo "‚úÖ –§–∞–π–ª—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!"
    echo "üåê –ü—Ä–æ–≤–µ—Ä—å: https://{{HOST}}"

# –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π (–∏–∑ .env —Ñ–∞–π–ª–∞)
deploy:
    #!/usr/bin/env bash
    if [ ! -f .env ]; then
        echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        echo "–°–æ–∑–¥–∞–π –µ–≥–æ: cp .env.example .env"
        exit 1
    fi
    
    source .env
    
    echo "üöÄ –î–µ–ø–ª–æ–π –Ω–∞ $DEPLOY_HOST..."
    just deploy-ssh $DEPLOY_HOST $DEPLOY_USER $DEPLOY_PATH

# Git –¥–µ–ø–ª–æ–π: –∫–æ–º–º–∏—Ç + –ø—É—à + pull –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
deploy-git MESSAGE="Update":
    #!/usr/bin/env bash
    if [ ! -f .env ]; then
        echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
    
    source .env
    
    echo "üì¶ –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    git add -A
    git commit -m "{{MESSAGE}}" || echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
    
    echo "‚¨ÜÔ∏è  Push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
    git push origin main
    
    echo "‚¨áÔ∏è  Pull –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && git pull origin main"
    
    echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"

# –ó–∞–ø—É—Å—Ç–∏—Ç—å OrbStack/Docker
docker-start:
    @echo "üê≥ –ó–∞–ø—É—Å–∫ OrbStack..."
    @open -a OrbStack || echo "‚ö†Ô∏è  OrbStack –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å OrbStack/Docker
docker-stop:
    @echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ OrbStack..."
    @osascript -e 'quit app "OrbStack"' || echo "‚ö†Ô∏è  OrbStack –Ω–µ –∑–∞–ø—É—â–µ–Ω"

# –°—Ç–∞—Ç—É—Å Docker
docker-status:
    @echo "üìä –°—Ç–∞—Ç—É—Å Docker:"
    @docker ps --format "table {{"{{.Names}}"}}\t{{"{{.Status}}"}}\t{{"{{.Ports}}"}}" 2>/dev/null || echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"

# –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å docker-compose.yml)
docker-up:
    @echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    @docker-compose up -d

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
docker-down:
    @echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    @docker-compose down

# –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-logs SERVICE="":
    #!/usr/bin/env bash
    if [ -z "{{SERVICE}}" ]; then
        docker-compose logs -f
    else
        docker-compose logs -f {{SERVICE}}
    fi
